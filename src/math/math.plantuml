@startuml

title __MATH's Class Diagram__\n

  namespace  {
    namespace ath {
      class math.Constants {
          {static} + infinity : double
          {static} + inv_2pi : double
          {static} + inv_pi : double
          {static} + nearzero : double
          {static} + one_over_three : double
          {static} + pi_over_two : double
          {static} + two_pi : double
      }
    }
  }
  

  namespace  {
    namespace ath {
      class math.Matrix4x4 {
          + m00 : double
          + m01 : double
          + m02 : double
          + m03 : double
          + m10 : double
          + m11 : double
          + m12 : double
          + m13 : double
          + m20 : double
          + m21 : double
          + m22 : double
          + m23 : double
          + m30 : double
          + m31 : double
          + m32 : double
          + m33 : double
          + Matrix4x4()
          + Matrix4x4()
          + Matrix4x4()
          + createRotationMatrix()
          + createScaleMatrix()
          + createTranslationMatrix()
          + createUnitMatrix()
          + createXRotationMatrix()
          + createXScaleMatrix()
          + createYRotationMatrix()
          + createYScaleMatrix()
          + createZRotationMatrix()
          + createZScaleMatrix()
      }
    }
  }
  

  namespace  {
    namespace ath {
      class math.MatrixOps {
          {static} + mkFromQuaternion()
          {static} + multiply()
          {static} + multiply()
          {static} + multiply()
          {static} + transform()
          {static} + transform()
          {static} + transpose()
      }
    }
  }
  

  namespace  {
    namespace ath {
      class math.Point3D {
          + Point3D()
          + Point3D()
          + Point3D()
          + Point3D()
          + set()
          + set()
      }
    }
  }
  

  namespace  {
    namespace ath {
      class math.Quaternion {
          + i : double
          + j : double
          + k : double
          + r : double
          + s : double
          + Quaternion()
          + Quaternion()
          {static} + mul()
      }
    }
  }
  

  namespace  {
    namespace ath {
      class math.TransformationMatrix4x4 {
          + TransformationMatrix4x4()
          + TransformationMatrix4x4()
          + TransformationMatrix4x4()
          + createRotationMatrix()
          + createScaleMatrix()
          + createTranslationMatrix()
          + createUnitMatrix()
          + createXRotationMatrix()
          + createXScaleMatrix()
          + createYRotationMatrix()
          + createYScaleMatrix()
          + createZRotationMatrix()
          + createZScaleMatrix()
          + getInverseMatrix()
          + getMatrix()
          + transform()
      }
    }
  }
  

  namespace  {
    namespace ath {
      class math.Vector {
          + w : double
          + x : double
          + y : double
          + z : double
          + Vector()
          + dot()
          + normalize()
      }
    }
  }
  

  namespace  {
    namespace ath {
      class math.Vector3 {
          + x : float
          + y : float
          + z : float
          + Vector3()
          + Vector3()
          + Vector3()
          + add()
          + crossProduct()
          + distance()
          + dotProduct()
          {static} + lerp()
          + mult()
          + normalize()
          + sub()
          + sub()
          + toString()
      }
    }
  }
  

  namespace  {
    namespace ath {
      class math.Vector3D {
          + Vector3D()
          + Vector3D()
          + Vector3D()
          + Vector3D()
          + add()
          + dot()
          + minus()
          + normalize()
          + scale()
          + set()
          + set()
      }
    }
  }
  

  namespace  {
    namespace ath {
      class math.VectorOps {
          + VectorOps()
          {static} + cross()
          {static} + dot()
          {static} + indexOfMinAbsComponent()
          {static} + magnitude()
          {static} + minus()
          {static} + normalize()
          {static} + normalizeMag()
          {static} + perpendicular()
          {static} + plus()
          {static} + scale()
          {static} + toPoint3D()
          {static} + toVector3D()
      }
    }
  }
  

  math.Point3D -up-|> math.Vector
  math.Quaternion o-- math.Vector3D : v
  math.TransformationMatrix4x4 o-- math.Matrix4x4 : im
  math.TransformationMatrix4x4 o-- math.Matrix4x4 : m
  math.Vector3D -up-|> math.Vector


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
